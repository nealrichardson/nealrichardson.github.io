[{"path":"https://enpiar.com/r/httpcache/articles/httpcache.html","id":"query-logging","dir":"Articles","previous_headings":"","what":"Query logging","title":"Improving API client performance with httpcache","text":"know, faster response, ’re hitting cache making server requests? designing API clients R, logging invaluable tool understanding improving request patterns. build layers abstraction top direct HTTP requests, can easy make inefficient repetitive requests degrade performance users impose unnecessary load servers. can’t improve can’t measure, logging tools included httpcache can help measure. Let’s clear cache repeat exercise, time logging enabled. Use startLog() enable request log. startLog takes file connection argument, passes cat log writing. default, cat, prints standard output—display, interactive session. (See ?cat details.) Notice first request results “HTTP GET” “CACHE SET”, second one gets “CACHE HIT” touch “HTTP”. log output, can conclude query cache working.","code":"clearCache() startLog() a <- GET(\"http://httpbin.org/get\") ## 2023-04-07T09:49:42.647 HTTP GET http://httpbin.org/get 200 368 0 0.001 0.158 0.158 1.953 1.953 ## 2023-04-07T09:49:42.648 CACHE SET http://httpbin.org/get b <- GET(\"http://httpbin.org/get\") ## 2023-04-07T09:49:42.649 CACHE HIT http://httpbin.org/get"},{"path":"https://enpiar.com/r/httpcache/articles/httpcache.html","id":"log-analysis","dir":"Articles","previous_headings":"Query logging","what":"Log analysis","title":"Improving API client performance with httpcache","text":"can also pass file name startLog. makes easier read log output back data.frame analyze quantitatively.","code":""},{"path":"https://enpiar.com/r/httpcache/articles/httpcache.html","id":"custom-logging","dir":"Articles","previous_headings":"Query logging","what":"Custom logging","title":"Improving API client performance with httpcache","text":"may want send events log, interspersed HTTP requests, whether sake see work done R outside HTTP layer maps onto server traffic. function logMessage() writes connection specified startLog, available general use. error logging, halt() function wraps stop sends message log (also makes awkwardly named call. argument stop default FALSE cleaner error messaging).","code":""},{"path":"https://enpiar.com/r/httpcache/articles/httpcache.html","id":"cache-invalidation","dir":"Articles","previous_headings":"","what":"Cache invalidation","title":"Improving API client performance with httpcache","text":"saying (joke, depending version), cache invalidation one two hard problems computer science. trouble caching server serves server source truth, state data server changes, local copy data stale. applications APIs, idea server state changes, many cases, source change server actions initiate . cases, local query cache feasible, cache invalidation tractable. httpcache provides functions direct cache invalidation. ’ve seen one already, clearCache(), wipes entire cache. functions give surgical control. dropOnly() invalidates cache specified URL. dropPattern() uses regular expression matching invalidate cache. dropCache() convenience wrapper around dropPattern invalidates cache resources start given URL. Depending API ’re communicating, may need use cache-invalidation functions directly, may need infrequently. httpcache designed RESTful APIs mind, particularly expose resources contain collections entities can created, replaced, updated, deleted (“CRUD”) POST, PUT, PATCH, DELETE, respectively. Consequently, four HTTP verb functions built default cache invalidation actions: POST invalidates cache request URL (dropOnly), case POST creates new entity appearing subresource; PUT, PATCH, DELETE drop cache request URL everything “” (dropCache). example, GET http://api.example/projects/ returns catalog project entities, POST http://api.example/projects/ creates resource http://api.example/projects/new_id/, need bust cache project catalog POST, cached responses resources http://api.example/projects/old_id/ still valid. , modify http://api.example/projects/new_id/, invalidate cache resource resources appearing subresources , http://api.example/projects/new_id/users/. verb functions httpcache (POST(), PUT(), PATCH(), DELETE()) take drop argument, defaults described . override , can specify different call dropCache(url) dropOnly(url), can pass drop = NULL call cache-invalidation functions directly outside request functions. Depending API usage , however, httpcache’s cache management may just work additional effort.","code":""},{"path":"https://enpiar.com/r/httpcache/articles/httpcache.html","id":"caching-across-sessions","dir":"Articles","previous_headings":"","what":"Caching across sessions","title":"Improving API client performance with httpcache","text":"query cache build one R session doesn’t end . Use saveCache() write contents cache .rds file. Restore later loadCache().","code":""},{"path":"https://enpiar.com/r/httpcache/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Neal Richardson. Author, maintainer.","code":""},{"path":"https://enpiar.com/r/httpcache/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Richardson N (2023). httpcache: Query Cache HTTP Clients. https://enpiar.com/r/httpcache/, https://github.com/nealrichardson/httpcache/.","code":"@Manual{,   title = {httpcache: Query Cache for HTTP Clients},   author = {Neal Richardson},   year = {2023},   note = {https://enpiar.com/r/httpcache/, https://github.com/nealrichardson/httpcache/}, }"},{"path":"https://enpiar.com/r/httpcache/index.html","id":"httpcache-query-cache-for-http-clients","dir":"","previous_headings":"","what":"Query Cache for HTTP Clients","title":"Query Cache for HTTP Clients","text":"order improve performance HTTP API clients, httpcache provides simple tools caching invalidating cache. includes HTTP verb functions GET, PUT, PATCH, POST, DELETE, drop-replacements httr package. functions cache-aware provide default settings cache invalidation suitable RESTful APIs; package also enables custom cache-management strategies. Finally, httpcache includes basic logging framework facilitate measurement HTTP request time cache performance.","code":""},{"path":"https://enpiar.com/r/httpcache/index.html","id":"installing","dir":"","previous_headings":"","what":"Installing","title":"Query Cache for HTTP Clients","text":"httpcache can installed CRAN pre-release version package can pulled GitHub using remotes package:","code":"install.packages(\"httpcache\") # install.packages(\"remotes\") remotes::install_github(\"nealrichardson/httpcache\")"},{"path":"https://enpiar.com/r/httpcache/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting started","title":"Query Cache for HTTP Clients","text":"Working httpcache simple loading package interactive session script instead httr, , package development, importing HTTP verb functions httpcache. GET() responses added local query cache; PUT(), PATCH(), POST(), DELETE() requests trigger cache invalidation associated resources. can override default cache invalidation, can command invalidation explicitly, invalidation functions dropCache(), dropPattern(), dropOnly(). clearCache() wipes cache completely. See vignette(\"httpcache\") examples HTTP cache practice.","code":""},{"path":"https://enpiar.com/r/httpcache/index.html","id":"for-developers","dir":"","previous_headings":"","what":"For developers","title":"Query Cache for HTTP Clients","text":"repository includes Makefile facilitate common tasks.","code":""},{"path":"https://enpiar.com/r/httpcache/index.html","id":"running-tests","dir":"","previous_headings":"For developers","what":"Running tests","title":"Query Cache for HTTP Clients","text":"$ make test. Requires httptest package. can also specify specific test file files run adding “file=” argument, like $ make test file=logging. test_package regular-expression pattern match within file names. See documentation testthat package.","code":""},{"path":"https://enpiar.com/r/httpcache/index.html","id":"updating-documentation","dir":"","previous_headings":"For developers","what":"Updating documentation","title":"Query Cache for HTTP Clients","text":"$ make doc. Requires roxygen2 package.","code":""},{"path":"https://enpiar.com/r/httpcache/reference/buildCacheKey.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a unique cache key for a request — buildCacheKey","title":"Construct a unique cache key for a request — buildCacheKey","text":"function encapsulates logic making cache key, allowing code libraries access HTTP cache programmatically.","code":""},{"path":"https://enpiar.com/r/httpcache/reference/buildCacheKey.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a unique cache key for a request — buildCacheKey","text":"","code":"buildCacheKey(url, query = NULL, body = NULL, extras = c())"},{"path":"https://enpiar.com/r/httpcache/reference/buildCacheKey.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a unique cache key for a request — buildCacheKey","text":"url character request URL query Optional query parameters request body Optional request body extras character Optional additional annotations include cache key.","code":""},{"path":"https://enpiar.com/r/httpcache/reference/buildCacheKey.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a unique cache key for a request — buildCacheKey","text":"Character value, starting url including hashed query body values provided, used cache key request.","code":""},{"path":"https://enpiar.com/r/httpcache/reference/cache-api.html","id":null,"dir":"Reference","previous_headings":"","what":"HTTP Cache API — cache-api","title":"HTTP Cache API — cache-api","text":"functions provide access stored cache.","code":""},{"path":"https://enpiar.com/r/httpcache/reference/cache-api.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"HTTP Cache API — cache-api","text":"","code":"hitCache(key)  getCache(key)  setCache(key, value)"},{"path":"https://enpiar.com/r/httpcache/reference/cache-api.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"HTTP Cache API — cache-api","text":"key character, typically URL similar value setCache, R object set cache key.","code":""},{"path":"https://enpiar.com/r/httpcache/reference/cache-api.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"HTTP Cache API — cache-api","text":"hitCache returns logical whether key exists cache. getCache returns value stored cache, NULL nothing cached. setCache called side effects.","code":""},{"path":"https://enpiar.com/r/httpcache/reference/cache-management.html","id":null,"dir":"Reference","previous_headings":"","what":"Manage the HTTP cache — cache-management","title":"Manage the HTTP cache — cache-management","text":"functions turn cache clear contents query cache.","code":""},{"path":"https://enpiar.com/r/httpcache/reference/cache-management.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Manage the HTTP cache — cache-management","text":"","code":"cacheOn()  cacheOff()  clearCache()"},{"path":"https://enpiar.com/r/httpcache/reference/cache-management.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Manage the HTTP cache — cache-management","text":"Nothing. Functions run side effects.","code":""},{"path":"https://enpiar.com/r/httpcache/reference/cacheLogSummary.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize cache performance from a log — cacheLogSummary","title":"Summarize cache performance from a log — cacheLogSummary","text":"Summarize cache performance log","code":""},{"path":"https://enpiar.com/r/httpcache/reference/cacheLogSummary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize cache performance from a log — cacheLogSummary","text":"","code":"cacheLogSummary(logdf)"},{"path":"https://enpiar.com/r/httpcache/reference/cacheLogSummary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize cache performance from a log — cacheLogSummary","text":"logdf logging data.frame, loaded loadLogfile().","code":""},{"path":"https://enpiar.com/r/httpcache/reference/cacheLogSummary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize cache performance from a log — cacheLogSummary","text":"list containing counts cache hit/set/drop events, plus cache hit rate.","code":""},{"path":"https://enpiar.com/r/httpcache/reference/cached-http-verbs.html","id":null,"dir":"Reference","previous_headings":"","what":"Cache-aware versions of httr verbs — cached-http-verbs","title":"Cache-aware versions of httr verbs — cached-http-verbs","text":"functions set, read , bust HTTP query cache. wrap similarly named functions httr package can used drop-replacements .","code":""},{"path":"https://enpiar.com/r/httpcache/reference/cached-http-verbs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cache-aware versions of httr verbs — cached-http-verbs","text":"","code":"GET(url, ...)  PUT(url, ..., drop = dropCache(url))  POST(url, ..., drop = dropOnly(url))  PATCH(url, ..., drop = dropCache(url))  DELETE(url, ..., drop = dropCache(url))"},{"path":"https://enpiar.com/r/httpcache/reference/cached-http-verbs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cache-aware versions of httr verbs — cached-http-verbs","text":"url character URL request ... additional arguments passed httr functions drop PUT, PATCH, POST, DELETE, code executed request. intended supplying cache-invalidation logic. default, POST drops cache specified url (.e. dropOnly()), verbs drop cache request URL URLs nested (.e. dropCache()).","code":""},{"path":"https://enpiar.com/r/httpcache/reference/cached-http-verbs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cache-aware versions of httr verbs — cached-http-verbs","text":"corresponding httr response object, potentially read cache","code":""},{"path":"https://enpiar.com/r/httpcache/reference/cached-http-verbs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cache-aware versions of httr verbs — cached-http-verbs","text":"GET checks cache making HTTP request, cache miss, sets response request cache future requests. verbs, assuming less RESTful API, assumed modify server state, thus trigger cache invalidation. default cache-invalidation strategies, can override desired.","code":""},{"path":[]},{"path":"https://enpiar.com/r/httpcache/reference/cachedPOST.html","id":null,"dir":"Reference","previous_headings":"","what":"Cache the response of a POST — cachedPOST","title":"Cache the response of a POST — cachedPOST","text":"APIs resources POST used send command returns content modify state. case, like GET. may occur one might normally GET request URI long server accept. cachedPOST thus behaves like GET, checking cached response performing request setting cache request successful. cache dropping, unlike POST().","code":""},{"path":"https://enpiar.com/r/httpcache/reference/cachedPOST.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cache the response of a POST — cachedPOST","text":"","code":"cachedPOST(url, ...)"},{"path":"https://enpiar.com/r/httpcache/reference/cachedPOST.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cache the response of a POST — cachedPOST","text":"url character URL request ... additional arguments passed httr functions","code":""},{"path":"https://enpiar.com/r/httpcache/reference/cachedPOST.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cache the response of a POST — cachedPOST","text":"corresponding httr response object, potentially read cache","code":""},{"path":"https://enpiar.com/r/httpcache/reference/dropCache.html","id":null,"dir":"Reference","previous_headings":"","what":"Invalidate cache — dropCache","title":"Invalidate cache — dropCache","text":"functions let control cache invalidation. dropOnly invalidates cache specified URL. dropPattern uses regular expression matching invalidate cache. dropCache convenience wrapper around dropPattern invalidates cache resources start given URL.","code":""},{"path":"https://enpiar.com/r/httpcache/reference/dropCache.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Invalidate cache — dropCache","text":"","code":"dropCache(x)  dropOnly(x)  dropPattern(x)"},{"path":"https://enpiar.com/r/httpcache/reference/dropCache.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Invalidate cache — dropCache","text":"x character URL regular expression","code":""},{"path":"https://enpiar.com/r/httpcache/reference/dropCache.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Invalidate cache — dropCache","text":"Nothing. Functions run side effects.","code":""},{"path":"https://enpiar.com/r/httpcache/reference/halt.html","id":null,"dir":"Reference","previous_headings":"","what":"Stop, log, and no call — halt","title":"Stop, log, and no call — halt","text":"Wrapper around base::stop() logs error message stops call.=FALSE default.","code":""},{"path":"https://enpiar.com/r/httpcache/reference/halt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stop, log, and no call — halt","text":"","code":"halt(..., call. = FALSE)"},{"path":"https://enpiar.com/r/httpcache/reference/halt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stop, log, and no call — halt","text":"... arguments passed stop call. logical: print call? Default FALSE, unlike stop","code":""},{"path":"https://enpiar.com/r/httpcache/reference/halt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stop, log, and no call — halt","text":"Nothing. Raises error.","code":""},{"path":"https://enpiar.com/r/httpcache/reference/loadLogfile.html","id":null,"dir":"Reference","previous_headings":"","what":"Read in a httpcache log file — loadLogfile","title":"Read in a httpcache log file — loadLogfile","text":"Read httpcache log file","code":""},{"path":"https://enpiar.com/r/httpcache/reference/loadLogfile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read in a httpcache log file — loadLogfile","text":"","code":"loadLogfile(filename, scope = c(\"CACHE\", \"HTTP\"))"},{"path":"https://enpiar.com/r/httpcache/reference/loadLogfile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read in a httpcache log file — loadLogfile","text":"filename character name log file, passed utils::read.delim() scope character optional means selecting certain log messages. default, \"CACHE\" \"HTTP\" log messages kept. logged messages, \"ERROR\" messages halt(), dropped resulting data.frame.","code":""},{"path":"https://enpiar.com/r/httpcache/reference/loadLogfile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read in a httpcache log file — loadLogfile","text":"data.frame log results.","code":""},{"path":"https://enpiar.com/r/httpcache/reference/logMessage.html","id":null,"dir":"Reference","previous_headings":"","what":"Log a message — logMessage","title":"Log a message — logMessage","text":"Log message","code":""},{"path":"https://enpiar.com/r/httpcache/reference/logMessage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log a message — logMessage","text":"","code":"logMessage(...)"},{"path":"https://enpiar.com/r/httpcache/reference/logMessage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log a message — logMessage","text":"... Strings pass base::cat()","code":""},{"path":"https://enpiar.com/r/httpcache/reference/logMessage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log a message — logMessage","text":"Nothing","code":""},{"path":"https://enpiar.com/r/httpcache/reference/requestLogSummary.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize HTTP requests from a log — requestLogSummary","title":"Summarize HTTP requests from a log — requestLogSummary","text":"Summarize HTTP requests log","code":""},{"path":"https://enpiar.com/r/httpcache/reference/requestLogSummary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize HTTP requests from a log — requestLogSummary","text":"","code":"requestLogSummary(logdf)"},{"path":"https://enpiar.com/r/httpcache/reference/requestLogSummary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize HTTP requests from a log — requestLogSummary","text":"logdf logging data.frame, loaded loadLogfile().","code":""},{"path":"https://enpiar.com/r/httpcache/reference/requestLogSummary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize HTTP requests from a log — requestLogSummary","text":"list containing counts HTTP requests verb, well summaries time spent waiting HTTP requests.","code":""},{"path":"https://enpiar.com/r/httpcache/reference/saveCache.html","id":null,"dir":"Reference","previous_headings":"","what":"Save and load cache state — saveCache","title":"Save and load cache state — saveCache","text":"Warm query cache previous session saving cache loading back .","code":""},{"path":"https://enpiar.com/r/httpcache/reference/saveCache.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save and load cache state — saveCache","text":"","code":"saveCache(file)  loadCache(file)"},{"path":"https://enpiar.com/r/httpcache/reference/saveCache.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save and load cache state — saveCache","text":"file character file path write cache data , .rds format","code":""},{"path":"https://enpiar.com/r/httpcache/reference/saveCache.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save and load cache state — saveCache","text":"Nothing; called side effects.","code":""},{"path":"https://enpiar.com/r/httpcache/reference/startLog.html","id":null,"dir":"Reference","previous_headings":"","what":"Enable logging — startLog","title":"Enable logging — startLog","text":"Enable logging","code":""},{"path":"https://enpiar.com/r/httpcache/reference/startLog.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Enable logging — startLog","text":"","code":"startLog(filename = \"\", append = FALSE)"},{"path":"https://enpiar.com/r/httpcache/reference/startLog.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Enable logging — startLog","text":"filename character: filename/path log can written . \"\", messages print stdout (screen). See base::cat(). append logical: file already exists, append ? Default FALSE, append mode, filename exists, deleted.","code":""},{"path":"https://enpiar.com/r/httpcache/reference/startLog.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Enable logging — startLog","text":"Nothing.","code":""},{"path":"https://enpiar.com/r/httpcache/reference/uncached.html","id":null,"dir":"Reference","previous_headings":"","what":"Context manager to temporarily turn cache off if it is on — uncached","title":"Context manager to temporarily turn cache off if it is on — uncached","text":"want store response GET request cache, wrap uncached(). neither read write cache.","code":""},{"path":"https://enpiar.com/r/httpcache/reference/uncached.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Context manager to temporarily turn cache off if it is on — uncached","text":"","code":"uncached(...)"},{"path":"https://enpiar.com/r/httpcache/reference/uncached.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Context manager to temporarily turn cache off if it is on — uncached","text":"... Things evaluate caching ","code":""},{"path":"https://enpiar.com/r/httpcache/reference/uncached.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Context manager to temporarily turn cache off if it is on — uncached","text":"Whatever ... returns.","code":""},{"path":"https://enpiar.com/r/httpcache/reference/uncached.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Context manager to temporarily turn cache off if it is on — uncached","text":"uncached invalidate cache records, present. ignores .","code":""},{"path":"https://enpiar.com/r/httpcache/reference/uncached.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Context manager to temporarily turn cache off if it is on — uncached","text":"","code":"uncached(GET(\"http://httpbin.org/get\")) #> Response [http://httpbin.org/get] #>   Date: 2023-04-07 13:49 #>   Status: 200 #>   Content-Type: application/json #>   Size: 368 B #> { #>   \"args\": {},  #>   \"headers\": { #>     \"Accept\": \"application/json, text/xml, application/xml, */*\",  #>     \"Accept-Encoding\": \"deflate, gzip\",  #>     \"Host\": \"httpbin.org\",  #>     \"User-Agent\": \"libcurl/7.86.0 r-curl/5.0.0 httr/1.4.5\",  #>     \"X-Amzn-Trace-Id\": \"Root=1-64301f6b-6aba6c60092e67ec028610cd\" #>   },  #>   \"origin\": \"76.230.157.126\",  #> ..."},{"path":"https://enpiar.com/r/httpcache/news/index.html","id":"httpcache-120","dir":"Changelog","previous_headings":"","what":"httpcache 1.2.0","title":"httpcache 1.2.0","text":"CRAN release: 2021-01-10 Update tests use latest features function naming httptest","code":""},{"path":"https://enpiar.com/r/httpcache/news/index.html","id":"httpcache-110","dir":"Changelog","previous_headings":"","what":"httpcache 1.1.0","title":"httpcache 1.1.0","text":"CRAN release: 2017-10-17 Remove cachedDownload. Use GET(url, config=write_disk(destfile)) instead, caches normally.","code":""},{"path":"https://enpiar.com/r/httpcache/news/index.html","id":"httpcache-102","dir":"Changelog","previous_headings":"","what":"httpcache 1.0.2","title":"httpcache 1.0.2","text":"CRAN release: 2017-08-28 Minor adjustment validation function’s error message format adapt changes R’s development version.","code":""},{"path":"https://enpiar.com/r/httpcache/news/index.html","id":"httpcache-100","dir":"Changelog","previous_headings":"","what":"httpcache 1.0.0","title":"httpcache 1.0.0","text":"CRAN release: 2017-01-03 New cached request functions: cachedPOST() cache results POST request resources POST gets content alter server state. cachedDownload cache result download.file. Functions access cache API: hitCache() check existence cache entry getCache() read setCache() set cache value buildCacheKey() construct cache key incorporates request’s query parameters body. Tools save restore cached queries across R sessions: saveCache() loadCache() Logging improvements: Add content-length curl request timings (just “total”) log messages. Trim trailing whitespace log messages Fix loadLogfile() reading log CACHE messages","code":""},{"path":"https://enpiar.com/r/httpcache/news/index.html","id":"httpcache-018","dir":"Changelog","previous_headings":"","what":"httpcache 0.1.8","title":"httpcache 0.1.8","text":"CRAN release: 2016-08-29 Include milliseconds timestamps","code":""},{"path":"https://enpiar.com/r/httpcache/news/index.html","id":"httpcache-016","dir":"Changelog","previous_headings":"","what":"httpcache 0.1.6","title":"httpcache 0.1.6","text":"Improve error message non-character input given GET()","code":""},{"path":"https://enpiar.com/r/httpcache/news/index.html","id":"httpcache-014","dir":"Changelog","previous_headings":"","what":"httpcache 0.1.4","title":"httpcache 0.1.4","text":"CRAN release: 2016-03-28 Ensure caching default Change GET() check cache uncached request made. Previously, uncached() checked cache write cache. Fix regular expression matching popQuery Improve escaping characters URLs dropping cache pattern Add vignette","code":""},{"path":"https://enpiar.com/r/httpcache/news/index.html","id":"httpcache-012","dir":"Changelog","previous_headings":"","what":"httpcache 0.1.2","title":"httpcache 0.1.2","text":"CRAN release: 2016-02-23 Revise resubmit CRAN","code":""},{"path":"https://enpiar.com/r/httpcache/news/index.html","id":"httpcache-010","dir":"Changelog","previous_headings":"","what":"httpcache 0.1.0","title":"httpcache 0.1.0","text":"Extract code tests crunch package Document export functions caching, invalidating, logging","code":""}]
